syntax="proto3";

package calculator;
option go_package="pb";

message SumRequest {
    int64 number1 = 1;
    int64 number2 = 2;
}

message ResultResponse {
    int64 number = 1;
}

message PrimeNumberRequest {
    int64 number = 1;
}
message PrimeNumberResponse {
    int64 number = 1;
}

message NumberRequest {
    float number = 1;
}

message ComputedAverageResponse {
    float average = 1;
}

message MaximumNumberRequest {
    int64 number = 1;
}

message MaximumNumberResponse {
    int64 number = 1;
}

message SquareRootRequest {
    int64 number = 1;
}

message SquareRootResponse {
    double number_root = 1;
}

service CalculatorService {
    // Unary
    rpc Sum(SumRequest) returns (ResultResponse) {};

    // Server Streaming    
    rpc PrimeNumber(PrimeNumberRequest) returns (stream PrimeNumberResponse) {};
    
    // Client Streaming
    rpc Average(stream NumberRequest) returns (ComputedAverageResponse) {};

    // BiDi Streaming
    rpc MaximumNumber(stream MaximumNumberRequest) returns (stream MaximumNumberResponse) {};

    // error handling
    // this RPC will throw an exception if the sent number is negative
    // The error being sent is of type INVALID_ARGUMENT
    rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse) {};

}
