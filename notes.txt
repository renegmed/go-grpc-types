
What's a Client Streaming API?

Client Streaming API are a new kind API enabled thanks to HTTP/2

The client will send many message to the server and will receive 
one response from the server (at any time)

Streaming Client are well suited for 

  When the client needs to send a lot of data (big data)

  When the Server processing is expensive and should happen
  as the client sends data 

  When the client needs to "PUSH" data to the server 
  without really expecting a response 



What's a Bi Directional Streaming API?

The client will send many message to the server 
and will receive many responses from the server 

The number of requests and responses does not 
have to match

Bi Directional Streaming RPC are well suited for
 
   When the client and the server needs to send a 
   lot of data asynchronously

   "Chat" protocol

   Long running connections


Error Codes

  With gRPC, there are few error codes: https://grpc.io/docs/guides/error.html

  There is also a complete reference to implementation of error codes
  that close a lot of gaps with the documentation: http://avi.im/grpc-errors

  If an application needs to return extra information on top of an error
  code, it can use the medata context.

  

gRPC Deadlines

  Deadlines allow gRPC clients to specify how long they are willing to
  wait for an RPC to complete before the RPC is terminated with the 
  error DEADLINE_EXCEEDED

  The gRPC documentation recommends you set a deadline for all 
  client RPC calls

  Setting the deadline is up to you: how long do you feel your API 
  should have to complete 

  The server should check if the deadline has exceeded and cancel the 
  work it is doing 

  This blog describes deadline in depth: https://grpc.io/blog/deadlines 

  Note: Deadlines are propagated across if gRPC calls are chained 
  A => B=> C (deadline for A is passed to B and then passed to C)


